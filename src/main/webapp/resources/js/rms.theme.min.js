// rms.locale初始化
(function(namespace) {
    "use strict";

    if (namespace == null) {
        throw new Error("rms can not be loaded, please ensure that the rms javascript has been imported to this page.");
    }

    // 主题专用rms函数、变量设置
    // 函数：获取DataTable的默认选项
    function getDataTableOption(serverSide) {
        var option = {
                sDom: "<'row'<'col-md-6 col-sm-6'p><'col-md-6 col-sm-6'f>r>t",
                sPaginationType: "simple_numbers",
                aLengthMenu: [8, 20, 50, 100 ],
                iDisplayLength: 8,
                bAutoWidth: false,
                bSort: false,
                bFilterOnEnter: true,
                bColumnIndex: true, // 用于custom插件
                oLanguage: {
                    oPaginate: {
                        sNext: namespace.locale["S001"],
                        sPrevious: namespace.locale["S002"]
                    },
                    sEmptyTable: namespace.locale["S003"],
                    sInfo: namespace.locale["S004"],
                    sInfoEmpty: namespace.locale["S005"],
                    sInfoFiltered: namespace.locale["S006"],
                    sLengthMenu: namespace.locale["S007"],
                    sLoadingRecords: namespace.locale["S008"],
                    sProcessing: "",
                    sSearch: "",
                    sSearchPlaceholder: namespace.locale["S009"],
                    sZeroRecords: namespace.locale["S010"]
                }
        };
        if (serverSide) {
            option.bProcessing = true;
            option.bServerSide = true;
            option.searchDelay = 1000;
        }
        return option;
    }

    //  函数：获取Select2的默认选项
    function getSelect2Option() {
        var option = {
                formatMatches: function (matches) { return "有 " + matches + " 条可用结果，请使用上下箭头进行导航"; },
                formatNoMatches: function () { return "未匹配到符合条件的记录"; },
                formatInputTooShort: function (input, min) { var n = min - input.length; return "请输入 " + n + " 个或更多字符"; },
                formatInputTooLong: function (input, max) { var n = input.length - max; return "请删除 " + n + " 个字符"; },
                formatSelectionTooBig: function (limit) { return "您仅能选择 " + limit + " 个选项"; },
                formatLoadMore: function (pageNumber) { return "正在读取更多结果……"; },
                formatSearching: function () { return "正在查询……"; }
                
        };
        return option;
    }

    // 函数：获取DatePicker的默认选项
    function getDatePickerOption() {
        var option = {
                format: "yyyy-mm-dd",
                autoclose: true,
                todayHighlight: true,
                language: "zh-CN",
                startDate: "1900-01-01"
        };
        return option;
    }

    // 函数：获取TimePicker的默认选项
    function getTimePickerOption() {
        var option = {
                showMeridian: false,
                defaultTime: false,
                showInputs: false
        };
        return option;
    }

    // 函数：获取Validation的默认选项
    function getValidationOption() {
        var option = {
                onsubmit: false,
                onfocusout: false,
                ignore: "input[type='hidden']",
                ignoreClassRules: true,
                ignoreAttributeRules: true,
                errorPlacement: function(error, element) {
                    if (element.parent().hasClass("input-group")) {
                        error.appendTo(element.parent().parent());
                    } else {
                        error.appendTo(element.parent());
                    }
                }
        };
        return option;
    }

    // 函数：获取SlimScroll的默认选项
    function getSlimScrollOption(height) {
        var option = {
                height: height,
                alwaysVisible: false
        }
        return option;
    }

    // 函数：获取blockUI的默认选项
    function getBlockOption() {
        var option = {
                message: '<div class="sk-spinner sk-spinner-wave"><div class="sk-rect1" style="margin-right: 3px"></div><div class="sk-rect2" style="margin-right: 3px"></div><div class="sk-rect3" style="margin-right: 3px"></div><div class="sk-rect4" style="margin-right: 3px"></div><div class="sk-rect5" style="margin-right: 3px"></div></div>',
                css: { backgroundColor: "transparent", border: "0px" },
                baseZ: 100000
        };
        return option;
    }
    
    // 函数：获取FileInput的默认选项
    function getFileInputOption() {
        var option = {
                language: "zh",
                maxFileSize: 20480,
                maxFileCount: 1,
                browseClass: "btn btn-primary",
                uploadClass: "btn btn-success",
                removeClass: "btn btn-white",
                allowedFileExtensions: ["jpg", "jpeg", "gif", "png", "pdf", "doc", "docx", "xls", "xlsx"],
                showUpload: false,
                previewFileType: "any"
        };
        return option;
    }

    // 函数：显示成功消息
    function showSuccess(key, params) {
        var message = namespace.getMessage(key, namespace.locale["S011"]);
        if (arguments.length > 1) {
            message = namespace.formatString(message, params);
        }
        if (toastr == null) {
            if (console && console.warn) {
                console.warn("Toastr can not be loaded, please ensure that the toastr plugin has been imported to this page.");
            }
            alert(message);
        } else {
            toastr.success(message);
        }
    }

    // 函数：显示一般消息
    function showInfo(key, params) {
        if (toastr == null) {
            if (console && console.warn) {
                console.warn("Toastr can not be found, please ensure that the toastr plugin has been imported to this page.");
            }
            return;
        }
        var message = namespace.getMessage(key);
        if (message == "") {
            return;
        }
        if (arguments.length > 1) {
            message = namespace.formatString(message, params);
        }
        toastr.info(message);
    }

    // 函数：显警告消息
    function showWarning(key, params) {
        var message = namespace.getMessage(key, namespace.locale["S012"]);
        if (arguments.length > 1) {
            message = namespace.formatString(message, params);
        }
        if (toastr == null) {
            if (console && console.warn) {
                console.warn("Toastr can not be found, please ensure that the toastr plugin has been imported to this page.");
            }
            alert(message);
        } else {
            toastr.warning(message);
        }
    }

    // 函数：显警告消息
    function showError(key, params) {
        var message = namespace.getMessage(key, namespace.locale["S013"]);
        if (arguments.length > 1) {
            message = namespace.formatString(message, params);
        }
        if (toastr == null) {
            if (console && console.warn) {
                console.warn("Toastr can not be found, please ensure that the toastr plugin has been imported to this page.");
            }
            alert(message);
        } else {
            toastr.error(message);
        }
    }

    // 函数：显示导入文件处理消息
    function showImportMessages(messages) {
        var defaults = {
                title: "导入结果",
                text: messages,
                confirmButtonColor: "#1c84c6",
                confirmButtonText: rms.locale["S017"],
                customClass: "importClass"
        };
        swal(defaults);
    }

    // 函数：处理远程通信异常
    function handleRemoteError(data, status, errorThrow) {
        if (data == null || data.status == null) {
            showError("S014");
            return;
        }
        if (data.status == "500" && data.responseText != null && data.responseText.indexOf("<html>") == -1) {
            var message = JSON.parse(data.responseText).error;
            if (toastr == null) {
                if (console && console.warn) {
                    console.warn("Toastr can not be found, please ensure that the toastr plugin has been imported to this page.");
                }
                alert(message);
            } else {
                toastr.error(message);
            }
        } else if (data.status == "403") {
            namespace.getView(namespace.getContextPath() + "/user/login");
        } else {
            showError(data.status);
        }
    }

    namespace.getDataTableOption = getDataTableOption;
    namespace.getDatePickerOption = getDatePickerOption;
    namespace.getTimePickerOption = getTimePickerOption;
    namespace.getSelect2Option = getSelect2Option;
    namespace.getValidationOption = getValidationOption;
    namespace.getSlimScrollOption = getSlimScrollOption;
    namespace.getBlockOption = getBlockOption;
    namespace.getFileInputOption = getFileInputOption;
    namespace.showSuccess = showSuccess;
    namespace.showInfo = showInfo;
    namespace.showWarning = showWarning;
    namespace.showError = showError;
    namespace.handleRemoteError = handleRemoteError;
    namespace.showImportMessages = showImportMessages;

    // 函数：处理菜单栏
    function handleTopMenu() {
        // TODO
    }

    // 函数：处理侧边栏状态
    function handleSideBar() {
        var $sideBar = $(".sidebar-collapse");
        var $breadcrumb = $(".breadcrumb li");
        if ($sideBar.lenght < 1 || $breadcrumb.length < 1) {
            return;
        }
        var $navigator;
        var navContent;
        for (var index = 0; index < ($breadcrumb.length > 2 ? 2 : $breadcrumb.length); index++) {
            $navigator = $($breadcrumb[index]);
            navContent = $.trim($navigator.find("a").length > 0 ? $navigator.find("a").text() : $navigator.text());
            $sideBar.find("a").each(function() {
                if ($.trim($(this).text()) == navContent) {
                    $(this).parent().addClass("active");
                }
            });
        }
    }

    // 函数：处理消息栏
    function handleMessageBar() {
        if (toastr == null) {
            return;
        }
        toastr.options = {
                "closeButton": true,
                "debug": false,
                "progressBar": true,
                "positionClass": "toast-bottom-full-width",
                "onclick": null,
                "showDuration": "400",
                "hideDuration": "1000",
                "timeOut": "7000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };
    }

    // 函数：处理可折叠控件
    function handleCollapsibleController() {
        $(".control-collapse-link").click(function () {
            var button = $(this).parent("span");
            var target = button.prev("textarea");
            var mark = $(this).find("i");
            target.slideToggle(200);
            mark.toggleClass("fa-chevron-up").toggleClass("fa-chevron-down");
            button.toggleClass("").toggleClass("input-group-addon-left");
        });
    }

    // 函数：处理DataTables的Ajax请求
    function handleDataTablesXhr() {
        if ($.blockUI == null || $.unblockUI == null || $("table").length < 1) {
            return;
        }
        $(document).delegate("table", "preXhr.dt", function(e, settings, json) {
            $.blockUI(getBlockOption());
        });
        $(document).delegate("table", "xhr.dt", function(e, settings, json) {
            $.unblockUI();
        });
    }

    // 函数：处理重置按钮
    function handleResetButton() {
        $(".btn-reset").click(function() {
            var forms = $(this).closest("form");
            if (forms.length > 0) {
                forms[0].reset();
            }
        });
    }

  /*  // 函数：处理任务菜单
    function handleTaskMenu() {

        if (!location.href.match(/overviews$/)) {
            var topmenu = rms.getValueInLocal("_TOP_MENU");
            var taskcount = rms.getValueInLocal("_TOP_MENU_TASK_CNT");

            var hHtml = template("taskmenu-templet", { list : topmenu });
            $("#taskmenu-placeholder").html(hHtml);
            if (taskcount != null
                && taskcount != "&nbsp;0&nbsp;") {
                $("#taskcount").html(taskcount);
                $("#taskcount").css("visibility", "visible");
            }

            var topmenuException = rms.getValueInLocal("_TOP_MENU_EXCEPTION");
            var exceptioncount = rms.getValueInLocal("_TOP_MENU_EXCEPTION_CNT");
            if(exceptioncount != null
                && exceptioncount != "&nbsp;0&nbsp;") {
                $("#exceptioncount").html(exceptioncount);
                $("#exceptioncount").css("visibility", "visible");
            }
            var hHtml = template("exceptionmenu-templet", { list : topmenuException });
            $("#exceptionmenu-placeholder").html(hHtml);
        }
    }*/

    // 函数：处理tooptips
    function handleToolTips() {
        $("[data-toggle='tooltip']").tooltip();
    }
    
    // 函数：禁用所有form submit
    function handleDisabledSubmit() {
        $("form").submit(function() {
            return false;
        });
    }

    // 函数：处理页面初始化
    function handlePageInitialization() {
        handleSideBar();
        handleMessageBar();
        handleCollapsibleController();
        handleDataTablesXhr();
        handleResetButton();
       
        handleToolTips();
        handleDisabledSubmit();
    }

    handlePageInitialization();

})(rms);

//jQuery扩展
$.fn.alert = function(options, callback) {
    var method;
    if (callback == null) {
        if (options == null || !$.isFunction(options)) {
            return;
        }
        method = options;
        options = null;
    } else {
        if (!$.isFunction(callback)) {
            return;
        }
        method = callback;
    }
    var defaults = {
            title: rms.locale["S015"],
            text: rms.locale["S016"],
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#dd6B55",
            confirmButtonText: rms.locale["S017"],
            cancelButtonText: rms.locale["S018"]
        };
    if (options == null) {
        defaults.title = $(this).attr("data-alert-title") || defaults.title
        defaults.text = $(this).attr("data-alert-text") || defaults.text;
        defaults.showCancelButton = $(this).attr("data-alert-cancelable") ? $(this).attr("data-alert-cancelable") === "true" : defaults.showCancelButton;
    } else {
        $.extend(defaults, options);
    }
    if (window.swal == null) {
        var result = confirm(defaults.text);
        if (result) {
            method.call(this);
        }
    } else {
        swal(defaults, method);
    }
}